# Verify volumes
version: "3.8"

x-common:
  &common
  # image: apache/airflow:2.3.3
  build:
    context: .
    dockerfile: ./airflow/Dockerfile
  user: "${AIRFLOW_UID:-50000}:0"
  env_file: 
    - .env
  volumes:
    - ./dags:/usr/local/airflow/dags # DAGs folder
    - ./logs:/usr/local/airflow/logs
    - ./plugins:/usr/local/airflow/plugins
    - ./.google/:/.google:ro
    - ./spark/app:/usr/local/spark/app # Spark Scripts (same path in airflow and spark)
    - ./spark/resources:/usr/local/spark/resources # Spark Resources (same path in airflow and spark)

x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:  
  # Postgres used by Airflow
  postgres:
    image: postgres:13.6
    networks:
      - default_net
    environment:
      - .env
    volumes:
      - "../sandbox/postgres:/var/lib/postgresql/data"
    ports:
      - "5432:5432"

  # Airflow LocalExecutor
  scheduler:
    <<: *common
    <<: *depends-on
    container_name: airflow-scheduler
    command: scheduler
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: *common
    <<: *depends-on
    container_name: airflow-webserver
    restart: always
    networks:
      - default_net
    ports:
      - "8080:8080" #host:container
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        sudo mkdir -p /usr/local/airflow/logs /usr/local/airflow/dags /usr/local/airflow/plugins
        sudo chown -R "${AIRFLOW_UID}:0" /usr/local/airflow/{logs,dags,plugins}
        exec /entrypoint airflow version

  # Spark with N workers
  spark-master:
    image: bitnami/spark:3.3.1
    #user: root # Run container as root container: https://docs.bitnami.com/tutorials/work-with-non-root-containers/
    hostname: spark
    networks:
      - default_net
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./spark/app:/usr/local/spark/app # Scripts (same path in airflow and spark)
      - ./spark/resources:/usr/local/spark/resources # Resources (same path in airflow and spark)
    ports:
      - "8081:8080"
      - "7077:7077"

  spark-worker-1:
    image: bitnami/spark:3.3.1
    #user: root
    networks:
      - default_net
    environment:
      - SPARK_MODE=worker
      - .env
    volumes:
      - ./spark/app:/usr/local/spark/app # Scripts (same path in airflow and spark)
      - ./spark/resources:/usr/local/spark/resources # Resources (same path in airflow and spark)

  spark-worker-2:
    image: bitnami/spark:3.3.1
    #user: root
    networks:
      - default_net
    environment:
      - SPARK_MODE=worker
      - .env
    volumes:
      - ./spark/app:/usr/local/spark/app # Scripts (same path in airflow and spark)
      - ./spark/resources:/usr/local/spark/resources # Resources (same path in airflow and spark)

  spark-worker-3:
    image: bitnami/spark:3.3.1
    #user: root
    networks:
      - default_net
    environment:
      - SPARK_MODE=worker
      - .env
    volumes:
      - ./spark/app:/usr/local/spark/app # Scripts (same path in airflow and spark)
      - ./spark/resources:/usr/local/spark/resources # Resources (same path in airflow and spark)

  # Jupyter Notebooks
  jupyter-pyspark:
    image: jupyter/pyspark-notebook:spark-3.3.1 # pyspark
    networks:
      - default_net
    ports:
      - "8888:8888"
      - "4040-4080:4040-4080"
    volumes:
      - ./notebooks:/home/pyspark_sql_df/notebooks/
      - ./spark/resources/data:/home/pyspark_sql_df/spark/resources/data # Scripts (same path in airflow and spark)
      - ./spark/resources/jars:/home/pyspark_sql_df/spark/resources/jars # Resources (same path in airflow and spark)

networks:
  default_net: